# -*- coding: utf-8 -*-
"""Keras_Multiclassifier_Iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Oxd3zoN6qH7fc-FosaPKmhqCcv1GcgXo
"""

# Required import statements:
import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import Adam
from keras.regularizers import l2

# load the iris dataset: 
iris_data = load_iris()

# Set x as flower characteristics and y as target values:
x = iris_data.data[:,[2,3] ]            # Use only 2 characteristics from the iris dataset.
y_ = iris_data.target.reshape(-1, 1) # Remove == 0 from previous HW to have mulitple types, instead of just 1 and 0.

# One Hot encode the class labels:
encoder = OneHotEncoder(sparse=False)
y = encoder.fit_transform(y_)

# Split the data for training and testing:
train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.20)

# Build the model:
model = Sequential()
model.add(Dense(10, input_shape=(2,), activation='relu', name='fc1', bias_regularizer=l2(0.01)))
model.add(Dense(10, activation='relu', name='fc2', bias_regularizer=l2(0.01)))
model.add(Dense(3, activation='softmax', name='output', bias_regularizer=l2(0.01)))

# Adam optimizer with learning rate of 0.001
optimizer = Adam(lr=0.001)
model.compile(optimizer, loss='categorical_crossentropy', metrics=['accuracy'])

# Print summary:
print('Neural Network Model Summary: ')
print(model.summary())

# Train the model
model.fit(train_x, train_y, verbose=2, batch_size=5, epochs=200)

# Test on unseen data
results = model.evaluate(test_x, test_y)
print('Final test set loss: {:4f}'.format(results[0]))
print('Final test set accuracy: {:4f}'.format(results[1]))